<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.nt4f04und.sweyer">


    <!-- io.flutter.app.FlutterApplication is an android.app.Application that
          calls FlutterMain.startInitialization(this); in its onCreate method.
          In most cases you can leave this as-is, but you if you want to provide
          additional functionality it is fine to subclass or reimplement
          FlutterApplication and put your custom class here. -->
    <application
        android:icon="@mipmap/ic_launcher"
        android:label="Sweyer"
        android:requestLegacyExternalStorage="true"
        android:resizeableActivity="false">
        <activity
            android:name="com.nt4f04und.sweyer.MainActivity"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:launchMode="singleTop"
            android:screenOrientation="portrait"
            android:theme="@style/LaunchTheme"
            android:windowSoftInputMode="adjustNothing">

            <!-- Displays an Android View that continues showing the launch screen
                Drawable until Flutter paints its first frame, then this splash
                screen fades out. A splash screen is useful to avoid any visual
                gap between the end of Android's launch screen and the painting of
                Flutter's first frame. -->
            <meta-data
                android:name="io.flutter.embedding.android.SplashScreenDrawable"
                android:resource="@drawable/launch_background" />
                
            <!-- Specifies an Android theme to apply to this Activity as soon as
                the Android process has started. This theme is visible to the user
                while the Flutter UI initializes. After that, this theme continues
                to determine the Window background behind the Flutter UI. -->
            <meta-data
                android:name="io.flutter.embedding.android.NormalTheme"
                android:resource="@style/NormalTheme" />

            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>

            <!-- This keeps the window background of the activity showing
                until Flutter renders its first frame. It can be removed if
                there is no splash screen (such as the default splash screen
                defined in @style/LaunchTheme). -->
            <meta-data
                android:name="io.flutter.app.android.SplashScreenUntilFirstFrame"
                android:value="true" />

            <!-- Intent filter for opening audio files -->
            <!--          <intent-filter>-->
            <!--            <action android:name="android.intent.action.VIEW" />-->
            <!--            <data android:mimeType="audio/*" />-->
            <!--            <category android:name="android.intent.category.DEFAULT" />-->
            <!--         </intent-filter>-->
        </activity>

        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />

        <service
            android:name="com.nt4f04und.sweyer.services.MusicService"
            android:enabled="true"
            android:exported="true"
            android:foregroundServiceType="mediaPlayback">
        </service>

        <service android:name="com.ryanheise.audioservice.AudioService">
            <intent-filter>
                <action android:name="android.media.browse.MediaBrowserService" />
            </intent-filter>
        </service>
    
        <receiver android:name="com.ryanheise.audioservice.MediaButtonReceiver" >
            <intent-filter>
                <action android:name="android.intent.action.MEDIA_BUTTON" />
            </intent-filter>
        </receiver> 

        <service
            android:enabled="true"
            android:name="com.nt4f04und.sweyer.services.DeletionService">
        </service>
    </application>

    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <!-- Needed to stay awake feature in MediaPlayer -->
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
</manifest>
